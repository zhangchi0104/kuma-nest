name: Terraform Plan

on:
  pull_request:
    branches:
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  plan:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::211125712027:role/BlogCIRole-dev
          aws-region: ap-southeast-2
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infrastructure
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: infrastructure
        id: validate
        run: terraform validate

      - name: Terraform Plan
        working-directory: infrastructure
        id: plan
        run: |
          terraform plan -out=plan.tmp
          terraform show -no-color plan.tmp

      - uses: actions/github-script@v7
        env:
          PLAN: '${{ steps.plan.outputs.stdout }}'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Prepare format of the comment
            const output = `#### Environment: dev

            #### Terraform Plan ðŸ“–

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>`;

            // 2. Create a new one
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output,
            })
